// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`areOptionsOpen = true 1`] = `
.emotion-0 {
  border: 1px solid #C3C3C3;
  border-radius: .2em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: .25em;
  padding-bottom: .25em;
  padding-right: .25em;
  padding-left: .25em;
  border-color: black;
  background-color: white;
}

.emotion-0 > div:first-of-type {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-0 > * {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-0 svg.expand {
  fill: black;
}

.emotion-0:hover {
  border-color: black;
}

.emotion-0 svg.expand {
  -webkit-transform: scaleY(-1);
  -ms-transform: scaleY(-1);
  transform: scaleY(-1);
}

.emotion-0 .divider {
  width: 1px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: #C3C3C3;
  margin-top: calc(.2em - .25em);
  margin-bottom: calc(.2em - .25em);
  margin-left: .4em;
  margin-right: .4em;
}

.emotion-0 svg.expand {
  width: 1em;
  height: 1em;
  margin-top: -1px;
}

.emotion-0 svg.expand:hover {
  opacity: 0.5;
}

<div
  className="emotion-0"
  onClick={[Function]}
  onMouseDown={[Function]}
  onTouchStart={[Function]}
>
  <div>
    <div
      data-props={Object {}}
    />
    <input
      data-props={
        Object {
          "onBlur": undefined,
          "onFocus": undefined,
        }
      }
    />
  </div>
  <span
    className="divider"
  />
  <svg>
    <path
      d="M0 0L5 5Z"
    />
  </svg>
</div>
`;

exports[`styles 1`] = `
.emotion-0 {
  border: 1px solid #C3C3C3;
  border-radius: .2em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: .25em;
  padding-bottom: .25em;
  padding-right: .25em;
  padding-left: .25em;
  background-color: white;
}

.emotion-0 > div:first-of-type {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-0 > * {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-0 svg.expand {
  fill: black;
}

.emotion-0:hover {
  border-color: black;
}

.emotion-0 .divider {
  width: 1px;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: #C3C3C3;
  margin-top: calc(.2em - .25em);
  margin-bottom: calc(.2em - .25em);
  margin-left: .4em;
  margin-right: .4em;
}

.emotion-0 svg.expand {
  width: 1em;
  height: 1em;
  margin-top: -1px;
}

.emotion-0 svg.expand:hover {
  opacity: 0.5;
}

<div
  className="emotion-0"
  onClick={[Function]}
  onMouseDown={[Function]}
  onTouchStart={[Function]}
>
  <div>
    <div
      data-props={Object {}}
    />
    <input
      data-props={
        Object {
          "onBlur": undefined,
          "onFocus": undefined,
        }
      }
    />
  </div>
  <span
    className="divider"
  />
  <svg>
    <path
      d="M0 0L5 5Z"
    />
  </svg>
</div>
`;

exports[`styles_disabled = true 1`] = `
<div
  Search={<MockInput />}
  SelectionList={<MockElement />}
  areOptionsOpen={false}
  styles_borderRadius=".2em"
  styles_checkRadio_borderWidth="2px"
  styles_checkRadio_labelMargin=".2em"
  styles_checkRadio_marginBetween="1em"
  styles_checkRadio_paddingBottom=".2em"
  styles_checkRadio_paddingLeft=".2em"
  styles_checkRadio_paddingRight=".2em"
  styles_checkRadio_paddingTop=".2em"
  styles_colors_background="white"
  styles_colors_disabled="#ECECEC"
  styles_colors_highlight="lightblue"
  styles_colors_primary="black"
  styles_colors_secondary="#C3C3C3"
  styles_colors_warning="#FABAAC"
  styles_colors_warningBold="#FA2222"
  styles_disabled={true}
  styles_fontSize="1em"
  styles_hasOptions={true}
  styles_hasSelection={false}
  styles_icon_width="1em"
  styles_multiple={false}
  styles_optionHighlighted={Array []}
  styles_option_paddingBottom=".25em"
  styles_option_paddingLeft=".25em"
  styles_option_paddingRight=".25em"
  styles_option_paddingTop=".25em"
  styles_paddingBottom=".25em"
  styles_paddingLeft=".25em"
  styles_paddingRight=".25em"
  styles_paddingTop=".25em"
  styles_rightToLeft={false}
  styles_search_size="8"
  styles_selection_margin=".2em"
  styles_selection_paddingBottom=".2em"
  styles_selection_paddingLeft=".4em"
  styles_selection_paddingRight=".4em"
  styles_selection_paddingTop=".2em"
  styles_width={600}
  svg_Expand={[Function]}
/>
`;

exports[`styles_hasOptions = false 1`] = `
.emotion-0 {
  border: 1px solid #C3C3C3;
  border-radius: .2em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: .25em;
  padding-bottom: .25em;
  padding-right: .25em;
  padding-left: .25em;
  background-color: white;
}

.emotion-0 > div:first-of-type {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-0 > * {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-0 svg.expand {
  fill: black;
}

.emotion-0:hover {
  border-color: black;
}

.emotion-0 .divider {
  display: none;
}

.emotion-0 .expand {
  display: none;
}

<div
  className="emotion-0"
  onClick={[Function]}
  onMouseDown={[Function]}
  onTouchStart={[Function]}
>
  <div>
    <div
      data-props={Object {}}
    />
    <input
      data-props={
        Object {
          "onBlur": undefined,
          "onFocus": undefined,
        }
      }
    />
  </div>
  <span
    className="divider"
  />
  <svg>
    <path
      d="M0 0L5 5Z"
    />
  </svg>
</div>
`;
